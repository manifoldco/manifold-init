name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Set registry
        run: 'echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc'
      - name: Publish new release of @manifoldco/mui-core ðŸš€
        run: 'npm publish --tag latest'
      - name: Copy types
        run: cp -r ./dist/types/v* ./mui-core-types/
      - name: Publish pre-release of @manifoldco/mui-core-types ðŸ¤«
        run: 'npm publish mui-core-types/ --tag latest'
  cdn:
    env:
      BUCKET: manifold-js
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      PACKAGE: '@manifoldco/mui-core' # package name
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [13.x]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          export_default_credentials: true
      - run: npm install
      - run: npm run build
      # Copy all files for versioned release (/package@version/)
      - run:
          gsutil -m cp ${GITHUB_WORKSPACE}/LICENSE
          gs://${BUCKET}/${PACKAGE}@${GITHUB_REF#refs/tags/v}/LICENSE
      - run:
          gsutil -m cp ${GITHUB_WORKSPACE}/README.md
          gs://${BUCKET}/${PACKAGE}@${GITHUB_REF#refs/tags/v}/README.md
      - run:
          gsutil -m cp ${GITHUB_WORKSPACE}/package.json
          gs://${BUCKET}/${PACKAGE}@${GITHUB_REF#refs/tags/v}/package.json
      - run:
          gsutil -m cp -r ${GITHUB_WORKSPACE}/dist
          gs://${BUCKET}/${PACKAGE}@${GITHUB_REF#refs/tags/v}
      - run:
          gsutil -m cp -r ${GITHUB_WORKSPACE}/loader
          gs://${BUCKET}/${PACKAGE}@${GITHUB_REF#refs/tags/v}
      # Copy all files for latest stable release (/package/)
      - run: gsutil -m cp ${GITHUB_WORKSPACE}/LICENSE gs://${BUCKET}/${PACKAGE}/LICENSE # overwrite these files
      - run: gsutil -m cp ${GITHUB_WORKSPACE}/README.md gs://${BUCKET}/${PACKAGE}/README.md
      - run: gsutil -m cp ${GITHUB_WORKSPACE}/package.json gs://${BUCKET}/${PACKAGE}/package.json
      # - run: gsutil -m rm -rf gs://${BUCKET}/${PACKAGE}/dist # remove /dist and /loader contents so no cruft remains from previous version
      # - run: gsutil -m rm -rf gs://${BUCKET}/${PACKAGE}/loader
      - run: gsutil -m cp -r ${GITHUB_WORKSPACE}/dist gs://${BUCKET}/${PACKAGE} # copy /dist and /loader folders
      - run: gsutil -m cp -r ${GITHUB_WORKSPACE}/loader gs://${BUCKET}/${PACKAGE}
